@mixin layout {
  --_gap-inline: var(--gap-inline, 0px);
  --_gap-block: var(--gap-block, 0px);
  --_wrap: var(--wrap, wrap);
  --_items: var(--items, 1);
  --_item-size-computed: calc((100% - (var(--_items) - 1) * var(--_axis-gap)) / var(--_items));
  --_item-size: var(--item-size, var(--_item-size-computed));
  display: flex;
  flex-wrap: var(--_wrap);
  gap: var(--_gap-block) var(--_gap-inline);
}

@mixin layout-inline {
  @include layout;
  --_axis-gap: var(--_gap-inline);
  flex-direction: row;
  > * {
    @include layout-inline-item;
  }
}

@mixin layout-block {
  @include layout;
  --_axis-gap: var(--_gap-block);
  flex-direction: column;
  > * {
    @include layout-block-item;
  }
}

@mixin layout-inline-item {
  width: var(--_item-size);
  min-width: var(--_item-size);
  flex: 0 0 var(--_item-size);
}

@mixin layout-block-item {
  height: var(--_item-size);
  min-height: var(--_item-size);
  flex: 0 0 var(--_item-size);
}

@mixin layout-stack {
  --_gap: var(--gap, 1em);
  display: flex;
  flex-direction: column;
  > * + * {
    --_item-gap: var(--gap, var(--_gap));
    margin-top: var(--_item-gap);
  }
}

@mixin layout-sizing {
  --layout-base-full-width: calc(100vw - 2 * var(--viewport-padding-inline));
  --layout-base-large-width: 1320px;
  --layout-base-medium-width: 800px;
  --layout-base-small-width: 400px;

  --layout-full-max-width: var(--layout-base-full-width);
  --layout-large-max-width: var(--layout-base-large-width);
  --layout-medium-max-width: var(--layout-base-medium-width);
  --layout-small-max-width: var(--layout-base-small-width);

  --layout-full-padding: max(calc((100vw - var(--layout-full-max-width)) / 2), var(--viewport-padding-inline));
  --layout-full-left-edge: var(--layout-full-padding);
  --layout-full-width: calc(100vw - 2 * var(--layout-full-left-edge));
  --layout-full-right-edge: calc(var(--layout-full-left-edge) + var(--layout-full-width));

  --layout-large-padding: max(calc((100vw - var(--layout-large-max-width)) / 2), var(--viewport-padding-inline));
  --layout-large-left-edge: var(--layout-large-padding);
  --layout-large-width: calc(100vw - 2 * var(--layout-large-left-edge));
  --layout-large-right-edge: calc(var(--layout-large-left-edge) + var(--layout-large-width));

  --layout-medium-padding: max(calc((100vw - var(--layout-medium-max-width)) / 2), var(--viewport-padding-inline));
  --layout-medium-left-edge: var(--layout-medium-padding);
  --layout-medium-width: calc(100vw - 2 * var(--layout-medium-left-edge));
  --layout-medium-right-edge: calc(var(--layout-medium-left-edge) + var(--layout-medium-width));

  --layout-small-padding: max(calc((100vw - var(--layout-small-max-width)) / 2), var(--viewport-padding-inline));
  --layout-small-left-edge: var(--layout-small-padding);
  --layout-small-width: calc(100vw - 2 * var(--layout-small-left-edge));
  --layout-small-right-edge: calc(var(--layout-small-left-edge) + var(--layout-small-width));

  --layout-column-unit-float: #{(1/12)};
  --layout-column-unit-percent: calc(var(--layout-column-unit-float) * 100%);
}

@mixin implement-layout {
  :root {
    @include layout-sizing;
  }
  .layout-inline {
    @include layout-inline;
  }
  .layout-block {
    @include layout-block;
  }
  .layout-stack {
    @include layout-stack;
  }
}
